{"version":3,"sources":["components/NavBar.js","assets/gotter prairie.jpg","pages/Home.js","pages/Plant.js","components/Search.js","SearchContext.js","SpeciesContext.js","pages/AllPlants.js","pages/Trees.js","pages/Shrubs.js","pages/Grasses.js","pages/Herbs.js","App.js","index.js"],"names":["NavBar","id","to","Home","src","gotter_prairie","alt","Plant","plant","binomialName","commonName","type","height","moistureRequirement","lightRequirement","className","Search","biSearch","comSearch","handleBiNameSearchState","handleComNameSearchState","onChange","placeholder","value","SearchContext","createContext","SearchProvider","children","useState","setBiSearch","setComSearch","Provider","e","target","compare","a","b","toLowerCase","SpeciesContext","SpeciesProvider","allPlants","setAllPlants","useEffect","fetch","then","r","json","species","AllPlants","useContext","plantsSorted","sort","allPlantsComps","map","searchComps","filter","split","join","includes","Trees","trees","speciesType","treesSorted","treeComps","Shrubs","shrubs","shrubsSorted","shrubComps","Grasses","grasses","grassesSorted","grassComps","Herbs","herbs","herbsSorted","herbComps","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9fecbf3a.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nfunction NavBar() {\n    return(\n        <nav id=\"navbar\">\n            <NavLink to=\"/\">Home</NavLink>\n            <NavLink to=\"/allplants\">All Plants</NavLink>\n            <NavLink to=\"/trees\">Trees</NavLink>\n            <NavLink to=\"/shrubs\">Shrubs</NavLink>\n            <NavLink to=\"/grasses\">Grasses</NavLink>\n            <NavLink to=\"/herbs\">Herbs</NavLink>\n        </nav>\n    )\n}\n\nexport default NavBar","export default __webpack_public_path__ + \"static/media/gotter prairie.65266a78.jpg\";","import React from 'react'\nimport gotter_prairie from '../assets/gotter prairie.jpg'\n\nfunction Home() {\n    return(\n        <div>\n            <h1>Welcome to the Portland Native Plant List!</h1>\n            <h3>Helping you find the right plant, for the right place.</h3>\n            <p>The Portland Native Plant List is an expansive resource containing plants native to Portland, Oregon.</p>\n            <p>All of the plants on this list could be suitable for backyard habitats and restoration projects alike.</p>\n            <img id=\"background\" src={gotter_prairie} alt=\"field of camas\"></img>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction Plant({plant}) {\n\n    const {binomialName, commonName, type, height, moistureRequirement, lightRequirement} = plant\n\n    return(\n        <div className=\"plant-card\">\n            <h2 id=\"latin\">{binomialName}</h2>\n            <h3>{commonName}</h3>\n            <p>Type: {type}</p>\n            <p>Height: {height}</p>\n            <p>Moisture Requirement: {moistureRequirement}</p>\n            <p>Light Requirement: {lightRequirement}</p>\n        </div>\n    )\n}\n\nexport default Plant","import React from 'react'\n\nfunction Search({biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState}) {\n\n    return(\n        <form>\n            <input onChange={handleBiNameSearchState} type=\"text\" placeholder=\"Search by Binomial Name\" value={biSearch}></input>\n            <input onChange={handleComNameSearchState} type=\"text\" placeholder=\"Search by Common Name\" value={comSearch}></input>\n        </form>\n    )\n}\n\nexport default Search","import { useState, createContext } from 'react'\n\nconst SearchContext = createContext()\n\nfunction SearchProvider({children}) {\n\n  const [biSearch, setBiSearch] = useState(\"\")\n  const [comSearch, setComSearch] = useState(\"\")\n\n  function handleBiNameSearchState(e) {\n    setBiSearch(e.target.value)\n  }\n\n  function handleComNameSearchState(e) {\n    setComSearch(e.target.value)\n  }\n\n  function compare(a, b) {\n    if (a.binomialName.toLowerCase() < b.binomialName.toLowerCase()) {\n        return -1\n    }\n    if (a.binomialName.toLowerCase() > b.binomialName.toLowerCase()) {\n        return 1\n    }\n    return 0\n  }\n  \n\n  return(\n    <SearchContext.Provider value={\n      { \n        biSearch,\n        setBiSearch,\n        comSearch,\n        setComSearch,\n        handleBiNameSearchState,\n        handleComNameSearchState,\n        compare}\n      }>\n      {children}\n    </SearchContext.Provider>\n  )\n}\n\nexport {SearchContext, SearchProvider}","import { useState, useEffect, createContext } from 'react'\n\nconst SpeciesContext = createContext()\n\nfunction SpeciesProvider({children}) {\n  const [allPlants, setAllPlants] = useState([])\n  useEffect(() => {\n    fetch(\"/species\")\n    .then((r) => r.json())\n    .then((species) => {\n      setAllPlants(species)\n    })\n  }, [])\n\n  return(\n    <SpeciesContext.Provider value={{allPlants, setAllPlants}}>\n      {children}\n    </SpeciesContext.Provider>\n  )\n}\n\nexport {SpeciesContext, SpeciesProvider}\n","import {useContext} from 'react'\nimport Plant from './Plant'\nimport Search from '../components/Search'\nimport { SearchContext } from '../SearchContext'\nimport { SpeciesContext } from '../SpeciesContext'\n\nfunction AllPlants() {\n\n    const {biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState, compare} = useContext(SearchContext)\n    const {allPlants} = useContext(SpeciesContext)\n    const plantsSorted = [...allPlants].sort(compare)\n    const allPlantsComps = plantsSorted.map(plant => <Plant plant={plant} key={plant.id}/>)\n    const plantSearch = plantsSorted.filter(plant => plant.binomialName.split(\" \").join(\"\").toLowerCase().includes(biSearch.split(\" \").join(\"\").toLowerCase()) && plant.commonName.split(\" \").join(\"\").toLowerCase().includes(comSearch.split(\" \").join(\"\").toLowerCase()))\n    const searchComps = plantSearch.map(plant => <Plant plant={plant} key={plant.id}/>)\n    \n    return(\n        <div>\n            <Search handleBiNameSearchState={handleBiNameSearchState} handleComNameSearchState={handleComNameSearchState} biSearch={biSearch} comSearch={comSearch}/>\n            {biSearch === \"\" && comSearch === \"\" ? allPlantsComps : searchComps}\n        </div>\n    )\n}\n\nexport default AllPlants","import {useContext} from 'react'\nimport Plant from './Plant'\nimport Search from '../components/Search'\nimport { SearchContext } from '../SearchContext'\nimport { SpeciesContext } from '../SpeciesContext'\n\nfunction Trees() {\n    const {biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState, compare} = useContext(SearchContext)\n    const {allPlants} = useContext(SpeciesContext)\n    const trees = allPlants.filter(plant => plant.speciesType.toLowerCase().includes(\"tree\"))\n    const treesSorted = [...trees].sort(compare)\n    const treeComps = treesSorted.map(plant => <Plant plant={plant} key={plant.id}/>)\n    const treeSearch = treesSorted.filter(plant => plant.binomialName.split(\" \").join(\"\").toLowerCase().includes(biSearch.split(\" \").join(\"\").toLowerCase()) && plant.commonName.split(\" \").join(\"\").toLowerCase().includes(comSearch.split(\" \").join(\"\").toLowerCase()))\n    const searchComps = treeSearch.map(plant => <Plant plant={plant} key={plant.id}/>)\n\n    return(\n        <div>\n            <Search biSearch={biSearch} comSearch={comSearch} handleBiNameSearchState={handleBiNameSearchState} handleComNameSearchState={handleComNameSearchState}/>\n            {biSearch === \"\" && comSearch === \"\"? treeComps : searchComps}\n        </div>\n    )\n}\n\nexport default Trees","import {useContext} from 'react'\nimport Plant from './Plant'\nimport Search from '../components/Search'\nimport { SearchContext } from '../SearchContext'\nimport { SpeciesContext } from '../SpeciesContext'\n\nfunction Shrubs() {\n    const {biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState, compare} = useContext(SearchContext)\n    const {allPlants} = useContext(SpeciesContext)\n    const shrubs = allPlants.filter(plant => plant.speciesType.toLowerCase().includes(\"shrub\"))\n    const shrubsSorted = [...shrubs].sort(compare)\n    const shrubComps = shrubsSorted.map(plant => <Plant plant={plant} key={plant.id}/>)\n    const shrubSearch = shrubsSorted.filter(plant => plant.binomialName.split(\" \").join(\"\").toLowerCase().includes(biSearch.split(\" \").join(\"\").toLowerCase()) && plant.commonName.split(\" \").join(\"\").toLowerCase().includes(comSearch.split(\" \").join(\"\").toLowerCase()))\n    const searchComps = shrubSearch.map(plant => <Plant plant={plant} key={plant.id}/>)\n\n    return(\n        <div>\n            <Search biSearch={biSearch} comSearch={comSearch} handleBiNameSearchState={handleBiNameSearchState} handleComNameSearchState={handleComNameSearchState}/>\n            {biSearch === \"\" && comSearch === \"\"? shrubComps : searchComps}\n        </div>\n    )    \n}\n\nexport default Shrubs","import {useContext} from 'react'\nimport Plant from './Plant'\nimport Search from '../components/Search'\nimport { SearchContext } from '../SearchContext'\nimport { SpeciesContext } from '../SpeciesContext'\n\nfunction Grasses() {\n    const {biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState, compare} = useContext(SearchContext)\n    const {allPlants} = useContext(SpeciesContext)\n    const grasses = allPlants.filter(plant => plant.speciesType.toLowerCase().includes(\"grass\"))\n    const grassesSorted = [...grasses].sort(compare)\n    const grassComps = grassesSorted.map(plant => <Plant plant={plant} key={plant.id}/>)\n    const grassSearch = grassesSorted.filter(plant => plant.binomialName.split(\" \").join(\"\").toLowerCase().includes(biSearch.split(\" \").join(\"\").toLowerCase()) && plant.commonName.split(\" \").join(\"\").toLowerCase().includes(comSearch.split(\" \").join(\"\").toLowerCase()))\n    const searchComps = grassSearch.map(plant => <Plant plant={plant} key={plant.id}/>)\n\n    return(\n        <div>\n            <Search biSearch={biSearch} comSearch={comSearch} handleBiNameSearchState={handleBiNameSearchState} handleComNameSearchState={handleComNameSearchState}/>\n            {biSearch === \"\" && comSearch === \"\"? grassComps : searchComps}\n        </div>\n    )\n}\n\nexport default Grasses","import {useContext} from 'react'\nimport Plant from './Plant'\nimport Search from '../components/Search'\nimport { SearchContext } from '../SearchContext'\nimport { SpeciesContext } from '../SpeciesContext'\n\nfunction Herbs(){\n    const {biSearch, comSearch, handleBiNameSearchState, handleComNameSearchState, compare} = useContext(SearchContext)\n    const {allPlants} = useContext(SpeciesContext)\n    const herbs = allPlants.filter(plant => plant.speciesType.toLowerCase().includes(\"herb\"))\n    const herbsSorted = [...herbs].sort(compare)\n    const herbComps = herbsSorted.map(plant => <Plant plant={plant} key={plant.id}/>)\n    const herbSearch = herbsSorted.filter(plant => plant.binomialName.split(\" \").join(\"\").toLowerCase().includes(biSearch.split(\" \").join(\"\").toLowerCase()) && plant.commonName.split(\" \").join(\"\").toLowerCase().includes(comSearch.split(\" \").join(\"\").toLowerCase()))\n    const searchComps = herbSearch.map(plant => <Plant plant={plant} key={plant.id}/>)\n\n    return(\n        <div>\n            <Search biSearch={biSearch} comSearch={comSearch} handleBiNameSearchState={handleBiNameSearchState} handleComNameSearchState={handleComNameSearchState}/>\n            {biSearch === \"\" && comSearch === \"\"? herbComps : searchComps}\n        </div>\n    );\n};\n\nexport default Herbs;","import './styles/App.css';\nimport { Routes, Route } from \"react-router-dom\"\nimport NavBar from './components/NavBar'\nimport Home from './pages/Home'\nimport AllPlants from './pages/AllPlants'\nimport Trees from './pages/Trees'\nimport Shrubs from './pages/Shrubs'\nimport Grasses from './pages/Grasses'\nimport Herbs from './pages/Herbs'\nimport { SearchProvider } from './SearchContext'\n\nfunction App() {\n\n  return (\n    <SearchProvider>\n      <div className=\"app\">\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" element={<Home />}/>\n          <Route path=\"/allplants\" element={<AllPlants />}/>\n          <Route path=\"/trees\" element={<Trees />}/>\n          <Route path=\"/shrubs\" element={<Shrubs />}/>\n          <Route path=\"/grasses\" element={<Grasses />}/>\n          <Route path=\"/herbs\" element={<Herbs />}/>\n          <Route path=\"*\" element={<h1>404 Not Found - Please Return to the Home Page</h1>}/>\n        </Routes>\n      </div>\n    </SearchProvider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { SpeciesProvider } from './SpeciesContext'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <SpeciesProvider>\n        <App />\n    </SpeciesProvider>\n  </BrowserRouter>\n)"],"sourceRoot":""}